{"version":3,"sources":["аренда-виллы-на-море.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA,IAAI,UAAJ,CAAe,sBAAf,EAAuC,CAAC,QAAD,EAAW,OAAX,EAAoB,UAAU,EAAV,EAAc,EAAd,EAAkB;;AAEzE,OAAG,UAAH,GAAgB,EAAhB;AACA,OAAG,OAAH,GAAa,EAAb;AACA,OAAG,cAAH,GAAoB;AAChB,mBAAW,aADK;AAEhB,gBAAQ,UAFQ;AAGhB,kBAAU,YAHM;AAIhB,mBAAW,YAJK;AAKhB,kBAAU,WALM;AAMhB,mBAAW,aANK;AAOhB,gBAAQ,UAPQ;AAQhB,iBAAS;AARO,KAApB,EASG,GAAG,eAAH,GAAqB,EATxB;AAUA,OAAG,MAAH,GAAY,EAAZ;AACA,OAAG,KAAH,GAAW,EAAX;;;;;;;AAOA,OAAG,YAAH,GAAkB,UAAU,KAAV,EAAiB;AAC/B,YAAI,GAAG,eAAH,KAAuB,EAAvB,KAA8B,MAAM,IAAN,CAAW,MAAX,CAAkB,OAAO,GAAG,eAAV,EAA2B,GAA3B,CAAlB,IAAqD,CAAC,CAAtD,IAA2D,MAAM,EAAN,CAAS,CAAT,EAAY,EAAZ,CAAe,MAAf,CAAsB,OAAO,GAAG,eAAV,EAA2B,GAA3B,CAAtB,IAAyD,CAAC,CAAnJ,CAAJ,EAA2J;AACvJ,mBAAO,IAAP;AACH;AACJ,KAJD;AAKA,OAAG,cAAH,GAAoB,YAAY;AAC5B,eAAO,QAAP,GAAkB,qBAAqB,GAAG,eAA1C;AACH,KAFD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAG,GAAH,CAAO,uBAAP,EAAgC,OAAhC,CAAwC,UAAU,UAAV,EAAsB;AAC1D,YAAI,cAAc,WAAW,MAA7B,EAAqC;AACjC,yBAAa,WAAW,IAAX,CAAgB,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AAC/C,oBAAI,KAAK,EAAL,IAAW,KAAK,EAApB,EAAwB,OAAO,CAAP;AACxB,oBAAI,CAAC,KAAK,EAAV,EAAc,OAAO,CAAC,CAAR;AACd,oBAAI,CAAC,KAAK,EAAV,EAAc,OAAO,CAAP;AACd,uBAAO,KAAK,EAAL,CAAQ,CAAR,EAAW,cAAX,GAA4B,KAAK,EAAL,CAAQ,CAAR,EAAW,cAA9C;AACH,aALY,CAAb;AAMA,eAAG,UAAH,GAAgB,UAAhB;AACA,eAAG,UAAH,CAAc,OAAd,CAAsB,UAAU,MAAV,EAAkB;AACpC,oBAAI,OAAO,EAAP,IAAa,SAAjB,EAA4B;AACxB,wBAAI,aAAa,OAAO,EAAP,CAAU,CAAV,EAAa,EAA9B;AAAA,wBACI,eAAe,OAAO,EAAP,CAAU,CAAV,CADnB;AAAA,wBAEI,gBAAgB,OAAO,EAF3B;;AAIA,wBAAI,CAAC,GAAG,OAAH,CAAW,UAAX,CAAL,EAA6B;AACzB,2BAAG,OAAH,CAAW,UAAX,IAAyB;AACrB,kCAAM,UADe;AAErB,wCAAY,EAFS;AAGrB,gCAAI,OAAO,EAAP,CAAU,CAAV,EAAa;AAHI,yBAAzB;AAKH;;AAED,wBAAI,iBAAiB,MAAjB,CAAJ,EAA8B;AAC1B,2BAAG,OAAH,CAAW,UAAX,EAAuB,UAAvB,CAAkC,IAAlC,CAAuC;AACnC,kCAAM,aAAa,EADgB;AAEnC,iCAAK,OAAO;AAFuB,yBAAvC;AAIH,qBALD,MAKO;AACH,4BAAI,eAAe,kBAAkB,UAAlB,EAA8B,aAA9B,CAAnB;AACA,gCAAQ,kBAAkB,UAAlB,EAA8B,aAAa,EAA3C,CAAR;AACI,iCAAK,IAAL;AACI,mCAAG,OAAH,CAAW,UAAX,EAAuB,UAAvB,CAAkC,IAAlC,CAAuC;AACnC,0CAAM,aAD6B;AAEnC,yCAAK,YAAY,OAAO,GAFW;AAGnC,iDAAa;AAHsB,iCAAvC;AAKA;AACJ,iCAAK,KAAL;AACI,mCAAG,OAAH,CAAW,UAAX,EAAuB,UAAvB,CAAkC,IAAlC,CAAuC;AACnC,0CAAM,aAAa,EADgB;AAEnC,yCAAK,YAAY,OAAO,EAAP,CAAU,CAAV,EAAa;AAFK,iCAAvC;AAIA,mCAAG,OAAH,CAAW,UAAX,EAAuB,UAAvB,CAAkC,IAAlC,CAAuC;AACnC,0CAAM,aAD6B;AAEnC,yCAAK,YAAY,OAAO,GAFW;AAGnC,iDAAa;AAHsB,iCAAvC;AAKA;AAlBR;AAoBH;AACJ,iBAzCD,MAyCO;AACH,wBAAI,OAAO,EAAX,EAAe;AACX,4BAAI,aAAa,OAAO,EAAP,CAAU,CAAV,EAAa,EAA9B;AAAA,4BACI,gBAAgB,OAAO,EAD3B;;AAGA,4BAAI,CAAC,GAAG,OAAH,CAAW,UAAX,CAAL,EAA6B;AACzB,+BAAG,OAAH,CAAW,UAAX,IAAyB;AACrB,sCAAM,UADe;AAErB,4CAAY,EAFS;AAGrB,oCAAI,OAAO,EAAP,CAAU,CAAV,EAAa;AAHI,6BAAzB;AAKH;;AAED,2BAAG,OAAH,CAAW,UAAX,EAAuB,UAAvB,CAAkC,IAAlC,CAAuC;AACnC,kCAAM,aAD6B;AAEnC,iCAAK,YAAY,OAAO,GAFW;AAGnC,yCAAa;AAHsB,yBAAvC;AAKH;AACJ;AACJ,aA9DD;AA+DH;AACD,YAAI,aAAa,OAAO,IAAP,CAAY,GAAG,OAAf,CAAjB;AACA,mBAAW,OAAX,CAAmB,UAAU,GAAV,EAAe;AAC9B,eAAG,MAAH,CAAU,OAAV,CAAkB,UAAU,CAAV,EAAa;AAC3B,oBAAI,GAAG,OAAH,CAAW,GAAX,EAAgB,IAAhB,IAAwB,EAAE,IAA9B,EAAoC;AAChC,uBAAG,OAAH,CAAW,GAAX,EAAgB,GAAhB,GAAsB,EAAE,GAAxB;AACH;AACJ,aAJD;AAKH,SAND;AAOH,KAjFD;AAkFA,aAAS,gBAAT,CAA0B,SAA1B,EAAqC;AACjC,eAAO,UAAU,EAAV,KAAiB,UAAU,EAAV,CAAa,CAAb,EAAgB,EAAxC;AACH;;AAED,aAAS,iBAAT,CAA2B,UAA3B,EAAuC,UAAvC,EAAmD;AAC/C,eAAO,GAAG,OAAH,CAAW,UAAX,EAAuB,UAAvB,CAAkC,IAAlC,CAAuC,UAAU,GAAV,EAAe;AACzD,mBAAO,IAAI,IAAJ,KAAa,UAApB;AACH,SAFM,CAAP;AAGH;;AAED,OAAG,cAAH,GAAoB,UAAU,MAAV,EAAkB;AAClC,qBAAa,OAAb,CAAqB,QAArB,EAA+B,OAAO,IAAtC;AACA,qBAAa,OAAb,CAAqB,UAArB,EAAiC,OAAO,EAAxC;AACA,eAAO,QAAP,GAAkB,OAAO,GAAzB;AACH,KAJD;AAKA,OAAG,iBAAH,GAAuB,UAAU,SAAV,EAAqB;AACxC,qBAAa,OAAb,CAAqB,YAArB,EAAmC,UAAU,IAA7C;AACA,eAAO,QAAP,GAAkB,cAAlB;AACH,KAHD;;AAKA,OAAG,MAAH,GAAY,UAAU,OAAV,EAAmB;AAC3B,YAAI,CAAC,OAAL,EAAc,OAAO,GAAP;AACd,kBAAU,QAAQ,OAAR,CAAgB,cAAhB,EAAgC,EAAhC,EAAoC,OAApC,CAA4C,MAA5C,EAAoD,EAApD,CAAV;AACA,YAAI,MAAM,SAAV;AACA,YAAI,CAAC,QAAQ,KAAR,CAAc,aAAd,CAAL,EAAmC,OAAO,sBAAP;AACnC,eAAO,OAAP;;AAEA,eAAO,GAAP;AACH,KARD;;AAUA,OAAG,MAAH,GAAY,CAAC;AACT,cAAM,MADG;AAET,aAAK;AAFI,KAAD,EAGT;AACC,cAAM,QADP;AAEC,aAAK;AAFN,KAHS,EAMT;AACC,cAAM,SADP;AAEC,aAAK;AAFN,KANS,EAST;AACC,cAAM,QADP;AAEC,aAAK;AAFN,KATS,EAYT;AACC,cAAM,SADP;AAEC,aAAK;AAFN,KAZS,EAeT;AACC,cAAM,SADP;AAEC,aAAK;AAFN,KAfS,EAkBT;AACC,cAAM,OADP;AAEC,aAAK;AAFN,KAlBS,CAAZ;AAsBH,CAnMsC,CAAvC","file":"аренда-виллы-на-море-compiled.js","sourcesContent":["'use strict';\n\n// $(window).load(function () {\n//     $('.img-block').click(function () {\n//         submenu = $(this).parents('.region-block').find('info-menu');\n//         $(submenu).sligeToggle();\n//     })\n// })\n\napp.controller('directionsController', ['$scope', '$http', function ($s, $h) {\n    // console.log('directionsController', $s);\n    $s.directions = [];\n    $s.regions = {};\n    $s.regionsClasses = {\n        \"Испания\": \"img-spanish\",\n        \"Азия\": \"img-asia\",\n        \"Карибы\": \"img-caribs\",\n        \"Франция\": \"img-france\",\n        \"Италия\": \"img-italy\",\n        \"Балканы\": \"img-balkans\",\n        \"Шале\": \"img-alps\",\n        \"Альпы\": \"img-alps\"\n    }, $s.selectedAddress = \"\";\n    $s.result = [];\n    $s.vills = [];\n    // $h.get('/api/data/table?t=342')\n    //     .success(function(vills) {\n    //         if(vills && vills.length) {\n    //             $s.vills = vills;\n    //         }\n    //     });\n    $s.searchResult = function (villa) {\n        if ($s.selectedAddress !== \"\" && (villa.name.search(RegExp($s.selectedAddress, \"i\")) > -1 || villa.f8[0].f1.search(RegExp($s.selectedAddress, \"i\")) > -1)) {\n            return true;\n        }\n    };\n    $s.goToSearchPage = function () {\n        window.location = \"/лучшие-виллы/#/\" + $s.selectedAddress;\n    };\n    // $h.get('/api/data/table?t=343')\n    //     .success(rows => {\n    //         //rows = rows.\n    //         $s.directions = rows;\n    //         rows.forEach(row => {\n    //             const regionName = row.f3[0].f1;\n    //             const region_id =  row.f3[0].field_value_id;\n    //\n    //             $s.regions[regionName] = $s.regions[regionName]\n    //                 || {\n    //                     name        : regionName,\n    //                     directions  : [],\n    //                     id          : region_id\n    //                 };\n    //\n    //             const region = $s.regions[regionName];\n    //\n    //             // adding subRegion if not exist\n    //             if (row.f2 && row.f2[0]) {\n    //                 const subRegion = row.f2[0];\n    //                 if (!region.directions.some( item => item.name == subRegion.f1)) {\n    //                     let name = subRegion.f1,\n    //                         url = subRegion.url,\n    //                         isDirection = false;\n    //                     region.directions.push({ name, url, isDirection });\n    //                 }\n    //             }\n    //\n    //             //\n    //         })\n    //     });\n    $h.get('/api/data/table?t=343').success(function (directions) {\n        if (directions && directions.length) {\n            directions = directions.sort(function (dir1, dir2) {\n                if (dir1.f2 == dir2.f2) return 0;\n                if (!dir1.f2) return -1;\n                if (!dir2.f2) return 1;\n                return dir1.f2[0].field_value_id - dir2.f2[0].field_value_id;\n            });\n            $s.directions = directions;\n            $s.directions.forEach(function (direct) {\n                if (direct.f2 != undefined) {\n                    var regionName = direct.f3[0].f1,\n                        subdirection = direct.f2[0],\n                        directionName = direct.f1;\n\n                    if (!$s.regions[regionName]) {\n                        $s.regions[regionName] = {\n                            name: regionName,\n                            directions: [],\n                            id: direct.f3[0].field_value_id\n                        };\n                    }\n\n                    if (hasSubDirections(direct)) {\n                        $s.regions[regionName].directions.push({\n                            name: subdirection.f1,\n                            url: direct.url\n                        });\n                    } else {\n                        var alreadyExist = subdirectionExist(regionName, directionName);\n                        switch (subdirectionExist(regionName, subdirection.f1)) {\n                            case true:\n                                $s.regions[regionName].directions.push({\n                                    name: directionName,\n                                    url: \"http://\" + direct.url,\n                                    isDirection: true\n                                });\n                                break;\n                            case false:\n                                $s.regions[regionName].directions.push({\n                                    name: subdirection.f1,\n                                    url: \"http://\" + direct.f2[0].f2\n                                });\n                                $s.regions[regionName].directions.push({\n                                    name: directionName,\n                                    url: \"http://\" + direct.url,\n                                    isDirection: true\n                                });\n                                break;\n                        }\n                    }\n                } else {\n                    if (direct.f3) {\n                        var regionName = direct.f3[0].f1,\n                            directionName = direct.f1;\n\n                        if (!$s.regions[regionName]) {\n                            $s.regions[regionName] = {\n                                name: regionName,\n                                directions: [],\n                                id: direct.f3[0].field_value_id\n                            };\n                        }\n\n                        $s.regions[regionName].directions.push({\n                            name: directionName,\n                            url: \"http://\" + direct.url,\n                            isDirection: true\n                        });\n                    }\n                }\n            });\n        }\n        var regionKeys = Object.keys($s.regions);\n        regionKeys.forEach(function (key) {\n            $s.urlReg.forEach(function (u) {\n                if ($s.regions[key].name == u.name) {\n                    $s.regions[key].url = u.url;\n                }\n            });\n        });\n    });\n    function hasSubDirections(direction) {\n        return direction.f1 === direction.f2[0].f1;\n    }\n\n    function subdirectionExist(regionName, subdirName) {\n        return $s.regions[regionName].directions.some(function (dir) {\n            return dir.name === subdirName;\n        });\n    }\n\n    $s.toTargetRegion = function (region) {\n        localStorage.setItem(\"region\", region.name);\n        localStorage.setItem(\"regionId\", region.id);\n        window.location = region.url;\n    };\n    $s.toTargetDirection = function (direction) {\n        localStorage.setItem('directName', direction.name);\n        window.location = '/description';\n    };\n\n    $s.getUrl = function (baseUrl) {\n        if (!baseUrl) return '#';\n        baseUrl = baseUrl.replace(/https?:\\/\\//g, '').replace(/^\\//g, '');\n        var url = 'http://';\n        if (!baseUrl.match(/arenda-vill/)) url += 'www.arenda-vill.com/';\n        url += baseUrl;\n\n        return url;\n    };\n\n    $s.urlReg = [{\n        name: 'Азия',\n        url: 'http://www.arenda-vill-asia.com'\n    }, {\n        name: 'Карибы',\n        url: 'http://www.arenda-vill-kariby.com'\n    }, {\n        name: 'Франция',\n        url: 'http://www.arenda-vill-franciya.com'\n    }, {\n        name: 'Италия',\n        url: 'http://www.arenda-vill-italiya.com'\n    }, {\n        name: 'Испания',\n        url: 'http://www.arenda-vill-ispaniya.com'\n    }, {\n        name: 'Балканы',\n        url: 'http://www.arenda-vill-balkany.com'\n    }, {\n        name: 'Альпы',\n        url: 'http://www.arenda-chalet.com'\n    }];\n}]);\n\n//# sourceMappingURL=аренда-виллы-на-море-compiled.js.map"]}