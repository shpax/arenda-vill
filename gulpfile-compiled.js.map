{"version":3,"sources":["gulpfile.js"],"names":[],"mappings":"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","file":"gulpfile-compiled.js","sourcesContent":["/**\n * Created by max on 19.03.16.\n */\n\nvar gulp        = require('gulp'),\n    download    = require('gulp-download'),\n    rename      = require('gulp-rename'),\n    fs          = require('fs'),\n    querystring = require('querystring'),\n    http        = require('http');\n\nvar settings;\nvar configfile = 'ovoconfig.json';\n\ngulp.task('default',['init','watch-all'],function() {\n    console.log(\"Files downloaded! Use 'watch-all' task to auto update\");\n});\n\ngulp.task('watch-all',['init'],function() {\n    gulp.watch('*/*.html',['push-all']);\n    gulp.watch('*/*.js',['push-all']);\n    gulp.watch('*/*.css',['push-all']);\n\n    gulp.watch('main.css',['push-all']);\n    gulp.watch('main.js',['push-all']);\n});\n\ngulp.task('download-all',['init'],function(){\n\n    const { use_common, page_urls, snippet_ids } = settings;\n\n    // downloading main js and css\n    if (use_common) ['css','js'].forEach(function(extention){\n        download(get_req(extention))\n            .pipe(rename('main.'+extention))\n            .pipe(gulp.dest(\".\"));\n    });\n\n    // downloading all pages, from settings.page_urls\n    if (page_urls) page_urls.forEach(function(pageUrl) {\n        ['css','js','html'].forEach(function(extention) {\n            download(get_req(extention,pageUrl))\n                .pipe(rename((pageUrl == '/' ? 'main' : pageUrl) + '.' + extention))\n                .pipe(gulp.dest((pageUrl =='/' ? 'main' : pageUrl) + \"/\"));\n        })\n    });\n\n    if (snippet_ids) snippet_ids.forEach(snippet_id => {\n        ['css','js','html'].forEach(function(extention) {\n            download(get_req(extention,snippet_id, true))\n                .pipe(rename(`snippet_${snippet_id}.` + extention))\n                .pipe(gulp.dest(`snippets/${snippet_id}/`));\n        })\n    })\n});\n\ngulp.task('push-all', ['init'],function() {\n\n    const { use_common, page_urls, snippet_ids } = settings;\n    \n    //push main js and css\n    if (use_common) ['css','js'].forEach(function(extention) {\n        var filename = compiled('main.'+extention);\n        if (fs.existsSync(filename)) {\n            console.log(\"sending file \" + filename);\n            var data = fs.readFileSync(filename, 'utf-8');\n            postToServer(data,extention);\n        } else console.log(\"file \" + filename + \" not found\");\n    });\n\n    //push page html, css and js\n    if (page_urls) page_urls.forEach(function(pageUrl) {\n        ['css','js','html'].forEach(function(extention) {\n            var filename = (pageUrl =='/' ? 'main' : pageUrl) + '/'\n                + (pageUrl =='/' ? 'main' : pageUrl) + '.'+extention;\n\n            filename = compiled(filename);\n            \n            if (fs.existsSync(filename)) {\n                console.log(\"sending file \" + filename);\n                var data = fs.readFileSync(filename, 'utf-8');\n                postToServer(data,extention, pageUrl);\n            } else console.log(\"file \" + filename + \" not found\");\n        })\n    });\n    \n    if (snippet_ids) snippet_ids.forEach(function(snippet_id) {\n        ['css','js','html'].forEach(function(extention) {\n            var filename = `snippets/${snippet_id}/snippet_${snippet_id}.${extention}`;\n\n            filename = compiled(filename);\n            \n            if (fs.existsSync(filename)) {\n                console.log(\"sending file \" + filename);\n                var data = fs.readFileSync(filename, 'utf-8');\n                postToServer(data,extention, snippet_id, true);\n            } else console.log(\"file \" + filename + \" not found\");\n        })\n    })\n});\n\ngulp.task('init', function() {\n    if (!fs.existsSync(configfile)) throw new Error (\"no config file\");\n    if (settings == undefined) {\n        settings = JSON.parse(fs.readFileSync(configfile, 'utf-8'));\n        console.log(settings);\n    }\n});\n\n\n\nfunction get_req(what, page_url, get_snippet_bool) {\n    var str = 'http://api.ovobox.com/get_site_content?';\n\n    str+= [\n        \"phone=\"    + settings.phone,\n        \"password=\" + settings.password,\n        \"domain=\"  + settings.domain,\n        \"what=\"     + what,\n    ].join('&');\n\n    if (page_url && !get_snippet_bool) str+= \"&page_url=\" + encodeURIComponent(page_url);\n\n    if (get_snippet_bool && page_url) str+= \"&snippet_id=\" + page_url;\n\n    return str;\n}\n\nfunction postToServer(data, what, pageUrl, post_snippet_bool) {\n    if (!data || data == '') return;\n    // Build the post string from an object\n    var post_data = querystring.stringify({\n        'phone':settings.phone,\n        'password':settings.password,\n        'domain':settings.domain,\n        'what':what,\n        'data':data,\n        [post_snippet_bool ? 'snippet_id' : 'page_url'] : pageUrl\n    });\n\n    // An object of options to indicate where to post to\n    var post_options = {\n        host: 'api.ovobox.com',\n        port: '80',\n        path: '/put_site_content',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Content-Length': Buffer.byteLength(post_data)\n        }\n    };\n\n    // Set up the request\n    var post_req = http.request(post_options, function(res) {\n        res.setEncoding('utf8');\n        res.on('data', function (chunk) {\n            console.log('Error: ' + chunk);\n        });\n    });\n\n    // post the data\n    post_req.write(post_data);\n    post_req.end();\n\n}\n\n// returns filename if there is no compiled variant\nfunction compiled(filename) {\n    const { compile_suffix } = settings;\n    const compiled = filename.replace(/\\.(.+)$/, `${compile_suffix}.$1`);\n    try {\n        fs.accessSync(compiled);\n        return compiled\n    } catch (e) {\n        return filename;\n    }\n}"]}